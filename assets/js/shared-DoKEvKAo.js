import{C as z,G as v,T,M as E,B as k,V as g,F as P,P as M,a as L,b as y,c as p}from"./vendor-three-CyrRzSLv.js";class _{constructor(t,o){this.camera=t,this.domElement=o,this.isDragging=!1,this.previousMousePosition={x:0,y:0},this.addEventListeners()}addEventListeners(){this.domElement.addEventListener("mousedown",this.onMouseDown.bind(this)),this.domElement.addEventListener("mousemove",this.onMouseMove.bind(this)),this.domElement.addEventListener("mouseup",this.onMouseUp.bind(this)),this.domElement.addEventListener("wheel",this.onMouseWheel.bind(this)),window.addEventListener("keydown",this.onKeyDown.bind(this))}onMouseDown(t){this.isDragging=!0,this.previousMousePosition={x:t.clientX,y:t.clientY}}onMouseMove(t){if(!this.isDragging)return;const o={x:t.clientX-this.previousMousePosition.x,y:t.clientY-this.previousMousePosition.y},e=.005;this.camera.camera.rotation.y-=o.x*e,this.camera.camera.rotation.x-=o.y*e,this.previousMousePosition={x:t.clientX,y:t.clientY}}onMouseUp(){this.isDragging=!1}onMouseWheel(t){this.camera.camera.position.z+=t.deltaY*.01}onKeyDown(t){switch(t.key){case"ArrowUp":this.camera.camera.position.z-=.1;break;case"ArrowDown":this.camera.camera.position.z+=.1;break;case"ArrowLeft":this.camera.camera.position.x-=.1;break;case"ArrowRight":this.camera.camera.position.x+=.1;break}}}class B{constructor(t,o,e){this.scene=t,this.camera=o,this.renderer=e,this.clock=new z,this.updatableLists=[]}start(){const t=this.renderer,o=this.camera;t.renderer.setAnimationLoop(()=>{this.tick(),t.renderer.render(this.scene.scene,o.camera)}),this.clock.getDelta()}tick(){const t=this.clock.getDelta();this.updatableLists.forEach(o=>{o.forEach(e=>e.tick(t))})}stop(){this.renderer.renderer.setAnimationLoop(null)}}async function F(c,t,o,e={}){const i=new v;function n(a){return new Promise((r,l)=>{i.load(a,m=>{r(m)},void 0,m=>{l(m)})})}function s(a){a.traverse(r=>{if(r.isMesh){const l=r;l.castShadow=!0,l.receiveShadow=!0}})}const h=["barrelTSCP","boatTSCP","bottom","building1TSCP","building2TSCP","burger","bus2TSCP","car2","cat","chair1","checkPoint","chum_bucket","clock","cow","dog","fish","hat","house1","jelly_fish","karen","krabTSCP","lightHouseTSCP","mill1","mill2","patrickStatue","phantom","pillar","pineapple_house","rabbit","rock","realBob","shiba","snailClock","spatula","spongehengeTSCP","squidwardHouseTSCP","swimmingRing","table","tableTSCP","tiki_wood","tikiStand","tikiToren","train","wooden_fence","krabDollar","krabMenu","mrKrab","krabPack","krabTable","jellyNet","jellyfish3","butterfly","tomb"],x=["roboBob1","roboBob2","doodleBob","spongebobDraw","phantomBob","realBob","scaryBob1","scaryBob2","spongeBobAll","parickHorse","patrickAll","patrickRobot","roboBob3"],u=["sauceTSCP","sodaTSCP","disco_ball","guess_box","xbox_controller_lp","star"],d=[];x.forEach(a=>{d.push(n(`assets_/models/Bobs/${a}/scene.gltf`).then(r=>{s(r.scene),c[a]=r,console.log("Loaded GLTF model:",a,r)}))}),h.forEach(a=>{d.push(n(`assets_/models/obstacles/${a}/scene.gltf`).then(r=>{s(r.scene),t[a]=r,console.log("Loaded GLTF model:",a,r);let l=0;r.scene.traverse(m=>{m.isMesh?l+=m.geometry.attributes.position.count:m.traverse(b=>{b.isMesh&&(l+=b.geometry.attributes.position.count)})}),console.log("Vertex count:",a,l)}))}),u.forEach(a=>{d.push(n(`assets_/models/Items/${a}/scene.gltf`).then(r=>{s(r.scene),o[a]=r,console.log("Loaded GLTF model:",a,r)}))});const f=["wood","block","glass","grass","particle","flower","flower2","sand","road","ice","colorful","cute","woodwet","artgorl","afiCarpet","afiPat","afiPat1","afiPat2","bears","seaweed","sea1"],w=new T;function S(a){return new Promise((r,l)=>{w.load(a,m=>{r(m)},void 0,m=>{l(m)})})}f.forEach(a=>{d.push(S(`assets_/textures/${a}.png`).then(r=>{e[a]=r,console.log("Loaded texture:",a)}))}),await Promise.all(d),c=Object.keys(c).sort().reduce((a,r)=>(a[r]=c[r],a),{}),t=Object.keys(t).sort().reduce((a,r)=>(a[r]=t[r],a),{})}function D(c){const t=c.scene.clone(!0),o=c.animations.map(e=>e.clone());return t.traverse(e=>{e instanceof E&&(e.geometry=e.geometry.clone(),Array.isArray(e.material)?e.material=e.material.map(i=>i.clone()):e.material=e.material.clone())}),t.updateMatrixWorld(!0),{...c,scene:t,animations:o}}class j{constructor(){this.duration=0,this.elapsedTime=0,this.velocities=[]}createBreakEffect(t,o=100,e=1){this.duration=e,this.elapsedTime=0;const i=new k,n=[];this.velocities=[];for(let h=0;h<o;h++)n.push(t.x,t.y,t.z),this.velocities.push(new g((Math.random()-.5)*2,(Math.random()-.5)*2,(Math.random()-.5)*2));i.setAttribute("position",new P(n,3));const s=new M({color:16711680,size:.1});this.particles=new L(i,s)}createWindEffect(t,o,e=100,i=1,n=new g(1,0,0)){this.duration=i,this.elapsedTime=0;const s=new k,h=[];this.velocities=[];for(let u=0;u<e;u++){const d=y.lerp(t.x,o.x,Math.random()),f=y.lerp(t.y,o.y,Math.random()),w=y.lerp(t.z,o.z,Math.random());h.push(d,f,w),this.velocities.push(n.clone().multiplyScalar(Math.random()*2))}s.setAttribute("position",new P(h,3));const x=new M({color:8900346,size:.1,transparent:!0,opacity:.5});this.particles=new L(s,x),console.log("particles",this.particles)}update(t){if(this.elapsedTime+=t,this.elapsedTime>=this.duration)return!1;const o=this.particles.geometry.attributes.position.array;for(let e=0;e<o.length;e+=3)o[e]+=this.velocities[e/3].x*t,o[e+1]+=this.velocities[e/3].y*t,o[e+2]+=this.velocities[e/3].z*t;return this.particles.geometry.attributes.position.needsUpdate=!0,!0}addToUpdateList(t){const o=new z,e=()=>{const i=o.getDelta();this.update(i)?requestAnimationFrame(e):t.remove(this.particles)};e()}}class G{constructor(){this.keys={},this.addEventListeners()}addEventListeners(){window.addEventListener("keydown",t=>{this.keys[t.key]=!0}),window.addEventListener("keyup",t=>{this.keys[t.key]=!1})}isKeyPressed(t){return this.keys[t]||!1}}function U(c){const i=(1664525*c+1013904223)%4294967296;return{random:i/4294967296,newSeed:i}}function H(c,t){const o=new p().setFromObject(c.mesh),e=new p().setFromObject(t.mesh);return o.intersectsBox(e)}function K(c,t,o){const e=new p().setFromObject(t.mesh);let i=.1;t.name.includes("tiki")&&(i=.15);for(const n in o){o[n];const s=new p().setFromObject(c.mesh);if(n=="forward"){if(e.min.z+i<s.max.z)continue;s.max.z+=e.min.z-s.max.z+i,s.min.z+=e.min.z-s.min.z+i,s.min.y+=.1,s.intersectsBox(e)&&(o[n]=Math.min(e.min.z,o[n]))}else if(n=="backward"){if(e.max.z-i>s.min.z)continue;s.max.z+=e.max.z-s.max.z-i,s.min.z+=e.max.z-s.min.z-i,s.min.y+=.1,s.intersectsBox(e)&&(o[n]=Math.max(e.max.z,o[n]))}else if(n=="left"){if(e.max.x-i>s.min.x)continue;s.max.x+=e.max.x-s.max.x-i,s.min.x+=e.max.x-s.min.x-i,s.min.y+=.1,s.intersectsBox(e)&&(o[n]=Math.max(e.max.x,o[n]))}else if(n=="right"){if(e.min.x+i<s.max.x)continue;s.max.x+=e.min.x-s.max.x+i,s.min.x+=e.min.x-s.min.x+i,s.min.y+=.1,s.intersectsBox(e)&&(o[n]=Math.min(e.min.x,o[n]))}else if(n=="up"){if(e.min.y+i<s.max.y)continue;s.max.y+=e.min.y-s.max.y+i,s.min.y+=e.min.y-s.min.y+i,s.intersectsBox(e)&&(o[n]=Math.min(e.min.y,o[n]))}else if(n=="down"){if(e.max.y-i>s.min.y)continue;s.max.y+=e.max.y-s.max.y-i,s.min.y+=e.max.y-s.min.y-i,s.intersectsBox(e)&&(o[n]=Math.max(e.max.y,o[n]))}}}export{_ as C,G as I,B as L,j as P,H as a,D as c,F as l,U as s,K as u};
